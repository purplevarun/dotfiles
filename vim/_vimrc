"  purplevarun's ~\_vimrc
" --------------------------------------
"  plugins
call plug#begin()
Plug 'Jorengarenar/miniSnip'
Plug 'octol/vim-cpp-enhanced-highlight'
Plug 'preservim/nerdcommenter'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'uiiaoo/java-syntax.vim'
Plug 'preservim/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'
Plug 'Pangloss/vim-javascript'
Plug 'mxw/vim-jsx'
Plug 'itchyny/vim-gitbranch'
call plug#end()
" --------------------------------------
"  encoding
set encoding=utf-8
set termencoding=utf-8
set fileencoding=utf-8
" --------------------------------------
"  settings
syntax on
set autoread
set autochdir
set history=10
set number
set mouse=a
set noshowmode
set undofile
set backup
set swapfile
set undodir=~\vimfiles\.undo\\
set backupdir=~\vimfiles\.backup\\
set directory=~\vimfiles\.swap\\
set scrolloff=8
set splitright
set splitbelow
set backspace=2
set tabstop=2
set softtabstop=2
set shiftwidth=2
set laststatus=2
set statusline=%f\ %{Mode()}\ %{gitbranch#name()}\  
set wrap
set linebreak
set tabline=%!Tabline()
"set colorcolumn=80
" --------------------------------------
" personalisations
let g:NERDTreeWinPos = "right"
let g:nerdtree_tabs_open_on_gui_startup = 0
let g:NERDTreeStatusline = 'NerdTree'
let mapleader=","
" --------------------------------------
"  shortcuts
nnoremap <C-S> :w <CR>
nnoremap <C-Q> :q <CR>
nnoremap <C-P> :e $MYVIMRC <CR>
nnoremap <C-L> :source % <CR>
nnoremap <C-B> :!clear&&filerunner % <CR>
nnoremap <C-T> :NERDTreeTabsToggle <CR>
nnoremap <C-Tab> <C-W><C-W>
nnoremap <C-A> ggVG
" --------------------------------------
"  clipboard
vnoremap y "+y
nnoremap yy "+yy
vnoremap x "+x
vnoremap p "+p
vnoremap P "+P
nnoremap p "+p
nnoremap P "+P
nnoremap dd "_dd
vnoremap d "_d
" --------------------------------------
" coc settings
command! -nargs=0 Prettier :CocCommand prettier.formatFile
" ---------------------------------------
" mode for statusline
function Mode()
	if mode()=="n"
		return "NORMAL"
	elseif mode()=="i"
		return "INSERT"
	elseif mode()=="c"
		return "COMMAND"
	elseif mode()=="v"
		return "VISUAL"
	elseif mode()=="V"
		return "VISUAL-LINE"
	elseif mode()=="R"
		return "REPLACE"
	else
		return mode()
endfunction
" ---------------------------------------
" show only filename in tabline
function! Tabline() abort
    let l:line = ''
    let l:current = tabpagenr()

    for l:i in range(1, tabpagenr('$'))
        if l:i == l:current
            let l:line .= '%#TabLineSel#'
        else
            let l:line .= '%#TabLine#'
        endif

        let l:label = fnamemodify(
            \ bufname(tabpagebuflist(l:i)[tabpagewinnr(l:i) - 1]),
            \ ':t'
        \ )

        let l:line .= '%' . i . 'T' " Starts mouse click target region.
        let l:line .= '  ' . l:label . '  '
    endfor

    let l:line .= '%#TabLineFill#'
    let l:line .= '%T' " Ends mouse click target region(s).

    return l:line
endfunction
" ---------------------------------------
